name: Build and Release Cross-Platform Binaries

on:
  release:
    types: [published]

jobs:
  build-linux:
    name: Build (Ubuntu)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Dependencies
        run: sudo apt update && sudo apt install -y gcc libssl-dev

      - name: Build Binary
        run: gcc -x -o cert_fingerprint-linux cert_fingerprint.c -lssl -lcrypto

      - name: Upload Ubuntu Binary
        uses: softprops/action-gh-release@v2
        with:
          files: cert_fingerprint-linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-alpine:
    name: Build (Alpine Linux)
    runs-on: ubuntu-latest

    container:
      image: alpine:latest

    steps:
      - name: Install dependencies
        run: |
          apk add --no-cache build-base openssl-dev git
          git clone $GITHUB_SERVER_URL/$GITHUB_REPOSITORY repo
          cd repo
          gcc -x -o cert_fingerprint-alpine cert_fingerprint.c -lssl -lcrypto
          mv cert_fingerprint-alpine /tmp/

      - name: Upload Alpine Binary
        uses: softprops/action-gh-release@v2
        with:
          files: /tmp/cert_fingerprint-alpine
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: Build (macOS Intel)
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install OpenSSL (via Homebrew)
        run: |
          brew install openssl
          export LDFLAGS="-L/usr/local/opt/openssl/lib"
          export CPPFLAGS="-I/usr/local/opt/openssl/include"
          gcc -o cert_fingerprint-macos cert_fingerprint.c -lssl -lcrypto $CPPFLAGS $LDFLAGS

      - name: Upload macOS Binary
        uses: softprops/action-gh-release@v2
        with:
          files: cert_fingerprint-macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Uncomment and configure if you want a Windows binary (complex due to OpenSSL setup)
  # build-windows:
  #   name: Build (Windows)
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: TODO - Install OpenSSL for Windows and compile
  #     - name: Upload Windows Binary
  #       uses: softprops/action-gh-release@v2
  #       with:
  #         files: cert_fingerprint.exe
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
